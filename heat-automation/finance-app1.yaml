heat_template_version: queens
description: multi-tier stack template

parameters:
  web_image_name:
    type: string
    default: rhel8-web
    description: Image used for web server
    constraints:
      - custom_constraint: glance.image
  db_image_name:
    type: string
    default: rhel8-db
    description: Image used for DB server
    constraints:
      - custom_constraint: glance.image
  web_instance_name:
    type: string
    default: finance-server1
    description: Name for the web server
  db_instance_name:
    type: string
    default: finance-server2
    description: Name for the DB server
  key_name:
    type: string
    default: example-keypair
    description: SSH key to connect to the servers
    constraints:
      - custom_constraint: nova.keypair
  instance_flavor:
    type: string
    default: default
    description: flavor used by the servers
    constraints:
      - custom_constraint: nova.flavor
  public_net:
    type: string
    default: provider-datacentre
    description: Name of public network into which servers get deployed
    constraints:
      - custom_constraint: neutron.network
  private_net:
    type: string
    default: finance-network1
    description: Name of private network into which servers get deployed
    constraints:
      - custom_constraint: neutron.network
  private_subnet:
    type: string
    default: finance-subnet1
    description: Name of private subnet into which servers get deployed
    constraints:
      - custom_constraint: neutron.subnet

resources:
  web_wait_handle:
    type: OS::Heat::WaitConditionHandle

  db_wait_handle:
    type: OS::Heat::WaitConditionHandle

  web_wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: web_wait_handle }
      count: 1
      timeout: 600

  db_wait_condition:
    type: OS::Heat::WaitCondition
    properties:
      handle: { get_resource: db_wait_handle }
      count: 1
      timeout: 800

  web_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: web_instance_name }
      image: { get_param: web_image_name }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: web_net_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: /home/student/heat/webserver.sh }
          params:
            $web_private_ip: {get_attr: [web_net_port,fixed_ips,0,ip_address]}
            $db_private_ip: {get_attr: [db_net_port,fixed_ips,0,ip_address]}
            $web_public_ip: {get_attr: [web_floating_ip,floating_ip_address]}
            $wc_notify: {get_attr: [web_wait_handle,curl_cli]}

  web_net_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      fixed_ips:
        - subnet: { get_param: private_subnet }
      security_groups: [{ get_resource: web_security_group }]

  web_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: web_net_port }

  web_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for the multi-tier architecture
      name: finance-web
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp

  db_server:
    type: OS::Nova::Server
    properties:
      name: { get_param: db_instance_name }
      image: { get_param: db_image_name }
      flavor: { get_param: instance_flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: db_net_port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: /home/student/heat/dbserver.sh }
          params:
            $db_wc_notify: {get_attr: [db_wait_handle,curl_cli]}

  db_net_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }
      fixed_ips:
        - subnet: { get_param: private_subnet }
      security_groups: [{ get_resource: db_security_group }]

  db_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: db_net_port }

  db_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for the multi-tier architecture
      name: finance-db
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_group_id: { get_resource: web_security_group }
          protocol: tcp
          port_range_min: 3306
          port_range_max: 3306
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
outputs:
  web_private_ip:
    description: Private IP address of the web server
    value: { get_attr: [ web_server, first_address ] }

  web_public_ip:
    description: External IP address of the web server
    value: { get_attr: [ web_floating_ip, floating_ip_address ] }

  db_private_ip:
    description: Private IP address of the DB server
    value: { get_attr: [ db_server, first_address ] }

  website_url:
    description: >
      This URL is the "external" URL that can be used to access the
      web server.
    value:
      str_replace:
        template: http://host/index.php
        params:
          host: { get_attr: [web_floating_ip, floating_ip_address] }
